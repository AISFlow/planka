#!/usr/bin/env bash
set -e

# If running as root, optionally adjust UID/GID
if [ "$(id -u)" -eq 0 ]; then
    TARGET_UID="${UID:-1001}"
    TARGET_GID="${GID:-1001}"

    CURRENT_UID="$(id -u planka)"
    CURRENT_GID="$(id -g planka)"

    # Only change GID if needed and if target GID is not already taken
    if [ "$TARGET_GID" != "$CURRENT_GID" ]; then
        if ! getent group "$TARGET_GID" > /dev/null; then
            groupmod -g "$TARGET_GID" planka
        fi
    fi

    # Only change UID if needed and if target UID is not already taken
    if [ "$TARGET_UID" != "$CURRENT_UID" ]; then
        if ! getent passwd "$TARGET_UID" > /dev/null; then
            usermod -u "$TARGET_UID" -g "$TARGET_GID" planka
        fi
    fi

    # Ensure required directories exist
    mkdir -p /app/public/user-avatars /app/public/project-background-images /app/private/attachments

    # Check if any file/dir under /app is not owned by TARGET_UID:GID
    if find /app \! -uid "$TARGET_UID" -o \! -gid "$TARGET_GID" | grep -q .; then
        echo "Applying chown -R planka:planka /app/"
        chown -R planka:planka /app/
    else
        echo "Skipping chown: all files under /app are already owned by $TARGET_UID:$TARGET_GID"
    fi
    gosu planka node db/init.js
    exec gosu planka "$@"
else
    # Non-root: just make sure directories exist (permission errors may occur if volumes are not owned)
    mkdir -p /app/public/user-avatars /app/public/project-background-images /app/private/attachments
    node db/init.js
    exec "$@"
fi
